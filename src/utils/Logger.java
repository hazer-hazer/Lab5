package utils;

public class Logger {
    public static void print(Object ...strings){
        String[] s = new String[strings.length];
        for(int i = 0; i < s.length; i++)
            s[i] = String.valueOf(strings[i]);
        System.out.print(String.join(" ", s));
    }

    public static void printl(Object ...strings){
        print(strings);
        System.out.println();
    }

    public static void illmissu(){
        Logger.printl("▓██▒▓██▒    ▓██▒       ▓██▒▀█▀ ██▒▓██▒▒██    ▒ ▒██    ▒     ██  ▓██▒\n" + " ██▓ ██▓     ██▓        ███▄ ▄███▓ ██▓  ██████   ██████     █    ██ \n" + "▒██▒▒██░    ▒██░       ▓██    ▓██░▒██▒░ ▓██▄   ░ ▓██▄      ▓██  ▒██░\n" + "░██░▒██░    ▒██░       ▒██    ▒██ ░██░  ▒   ██▒  ▒   ██▒   ▓▓█  ░██░\n" + "░██░░██████▒░██████▒   ▒██▒   ░██▒░██░▒██████▒▒▒██████▒▒   ▒▒█████▓ \n" + "░▓  ░ ▒░▓  ░░ ▒░▓  ░   ░ ▒░   ░  ░░▓  ▒ ▒▓▒ ▒ ░▒ ▒▓▒ ▒ ░   ░▒▓▒ ▒ ▒ \n" + " ▒ ░░ ░ ▒  ░░ ░ ▒  ░   ░  ░      ░ ▒ ░░ ░▒  ░ ░░ ░▒  ░ ░   ░░▒░ ░ ░ \n" + " ▒ ░  ░ ░     ░ ░      ░      ░    ▒ ░░  ░  ░  ░  ░  ░      ░░░ ░ ░ \n" + " ░      ░  ░    ░  ░          ░    ░        ░        ░        ░     \n" + "                                                                    \n");
    }

    public static void zdarova(){
        Logger.printl("      ___           ___           ___           ___           ___           ___           ___     \n" + "     \\:\\  \\       /::\\  \\       /::\\  \\       /::\\  \\       /::\\  \\       /:/  /        /::\\  \\   \n" + "     /\\  \\         /\\  \\         /\\  \\         /\\  \\         /\\  \\         /\\__\\         /\\  \\    \n" + "      \\:\\  \\     /:/\\:\\  \\     /:/\\:\\  \\     /:/\\:\\  \\     /:/\\:\\  \\     /:/  /        /:/\\:\\  \\  \n" + "       \\:\\  \\   /:/  \\:\\__\\   /::\\~\\:\\  \\   /::\\~\\:\\  \\   /:/  \\:\\  \\   /:/__/  ___   /::\\~\\:\\  \\ \n" + " _______\\:\\__\\ /:/__/ \\:|__| /:/\\:\\ \\:\\__\\ /:/\\:\\ \\:\\__\\ /:/__/ \\:\\__\\  |:|  | /\\__\\ /:/\\:\\ \\:\\__\\\n" + " \\::::::::/__/ \\:\\  \\ /:/  / \\/__\\:\\/:/  / \\/_|::\\/:/  / \\:\\  \\ /:/  /  |:|  |/:/  / \\/__\\:\\/:/  /\n" + "  \\:\\~~\\~~      \\:\\  /:/  /       \\::/  /     |:|::/  /   \\:\\  /:/  /   |:|__/:/  /       \\::/  / \n" + "   \\:\\  \\        \\:\\/:/  /        /:/  /      |:|\\/__/     \\:\\/:/  /     \\::::/__/        /:/  /  \n" + "    \\:\\__\\        \\::/__/        /:/  /       |:|  |        \\::/  /       ~~~~           /:/  /   \n" + "     \\/__/         ~~            \\/__/         \\|__|         \\/__/                       \\/__/    \n");
    }

    public static void privet(){
        Logger.printl("__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\________/\\\\\\\\\\\\\\\\\\_______/\\\\\\\\\\\\\\\\\\___________/\\\\\\\\\\_______/\\\\\\________/\\\\\\_____/\\\\\\\\\\\\\\\\\\____        \n" + " _\\////////////\\\\\\__\\/\\\\\\////////\\\\\\____/\\\\\\\\\\\\\\\\\\\\\\\\\\___/\\\\\\///////\\\\\\_______/\\\\\\///\\\\\\____\\/\\\\\\_______\\/\\\\\\___/\\\\\\\\\\\\\\\\\\\\\\\\\\__       \n" + "   _________/\\\\\\/_____\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\/_____/\\\\\\______\\//\\\\\\__\\//\\\\\\____/\\\\\\___\\/\\\\\\_______\\/\\\\\\_     \n" + "  ___________/\\\\\\/___\\/\\\\\\______\\//\\\\\\__/\\\\\\/////////\\\\\\_\\/\\\\\\_____\\/\\\\\\_____/\\\\\\/__\\///\\\\\\__\\//\\\\\\______/\\\\\\___/\\\\\\/////////\\\\\\_      \n" + "    _______/\\\\\\/_______\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\//////\\\\\\____\\/\\\\\\_______\\/\\\\\\___\\//\\\\\\__/\\\\\\____\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_    \n" + "     _____/\\\\\\/_________\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\/////////\\\\\\_\\/\\\\\\____\\//\\\\\\___\\//\\\\\\______/\\\\\\_____\\//\\\\\\/\\\\\\_____\\/\\\\\\/////////\\\\\\_   \n" + "      ___/\\\\\\/___________\\/\\\\\\_______/\\\\\\__\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_____\\//\\\\\\___\\///\\\\\\__/\\\\\\________\\//\\\\\\\\\\______\\/\\\\\\_______\\/\\\\\\_  \n" + "       __/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\/___\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\______\\//\\\\\\____\\///\\\\\\\\\\/__________\\//\\\\\\_______\\/\\\\\\_______\\/\\\\\\_ \n" + "        _\\///////////////__\\////////////_____\\///________\\///__\\///________\\///_______\\/////_____________\\///________\\///________\\///__\n");
    }

    public static void hello(){
        Logger.printl("██╗  ██╗███████╗██╗     ██╗      ██████╗        ███╗   ███╗██╗   ██╗     ██████╗  ██████╗ ███████╗██████╗  ██████╗ ██████╗ ██╗███╗   ██╗\n" + "███████║█████╗  ██║     ██║     ██║   ██║       ██╔████╔██║ ╚████╔╝     ██║  ███╗██║   ██║███████╗██████╔╝██║   ██║██║  ██║██║██╔██╗ ██║\n" + "██║  ██║██╔════╝██║     ██║     ██╔═══██╗       ████╗ ████║╚██╗ ██╔╝    ██╔════╝ ██╔═══██╗██╔════╝██╔══██╗██╔═══██╗██╔══██╗██║████╗  ██║\n" + "██╔══██║██╔══╝  ██║     ██║     ██║   ██║       ██║╚██╔╝██║  ╚██╔╝      ██║   ██║██║   ██║╚════██║██╔═══╝ ██║   ██║██║  ██║██║██║╚██╗██║\n" + "██║  ██║███████╗███████╗███████╗╚██████╔╝▄█╗    ██║ ╚═╝ ██║   ██║       ╚██████╔╝╚██████╔╝███████║██║     ╚██████╔╝██████╔╝██║██║ ╚████║\n" + "╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝ ╚═════╝ ╚═╝    ╚═╝     ╚═╝   ╚═╝        ╚═════╝  ╚═════╝ ╚══════╝╚═╝      ╚═════╝ ╚═════╝ ╚═╝╚═╝  ╚═══╝\n" + "                                                                                                                                        \n");
    }

    public static void nuprivet(){
        Logger.printl(" __   __     __  __        ______   ______     __     __   __   ______     ______  \n" + "/\\ \"-.\\ \\   /\\ \\/\\ \\      /\\  == \\ /\\  == \\   /\\ \\   /\\ \\ / /  /\\  ___\\   /\\__  _\\ \n" + "\\ \\ \\-.  \\  \\ \\ \\_\\ \\     \\ \\  _-/ \\ \\  __<   \\ \\ \\  \\ \\ \\'/   \\ \\  __\\   \\/_/\\ \\/ \n" + " \\ \\_\\\\\"\\_\\  \\ \\_____\\     \\ \\_\\    \\ \\_\\ \\_\\  \\ \\_\\  \\ \\__|    \\ \\_____\\    \\ \\_\\ \n" + "  \\/_/ \\/_/   \\/_____/      \\/_/     \\/_/ /_/   \\/_/   \\/_/      \\/_____/     \\/_/ \n" + "                                                                                   \n");
    }

    public static void randPrivet() {
        int rand = (int)(Math.random() * 4);
        if(rand == 0)
            Logger.privet();
        else if(rand == 1)
            Logger.hello();
        else if(rand == 2)
            Logger.nuprivet();
        else
            Logger.zdarova();
    }
}
